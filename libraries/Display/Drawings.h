#ifndef Crtezi_h
#define Crtezi_h

#include <stdint.h>
#include <avr/pgmspace.h>
#include <Constants.h>


/// Digits:
const uint8_t DRW_DIGIT[10][ROWS_CNT] PROGMEM  = {
  {0x00, 0x07, 0x05, 0x05, 0x05, 0x05, 0x07, 0x00}, // DIGIT_ZERO
  {0x00, 0x01, 0x03, 0x01, 0x01, 0x01, 0x01, 0x00}, // DIGIT_ONE
  {0x00, 0x07, 0x01, 0x07, 0x04, 0x04, 0x07, 0x00}, // DIGIT_TWO
  {0x00, 0x07, 0x01, 0x07, 0x01, 0x01, 0x07, 0x00}, // DIGIT_THREE
  {0x00, 0x05, 0x05, 0x07, 0x01, 0x01, 0x01, 0x00}, // DIGIT_FOUR
  {0x00, 0x07, 0x04, 0x07, 0x01, 0x01, 0x07, 0x00}, // DIGIT_FIVE
  {0x00, 0x07, 0x04, 0x07, 0x05, 0x05, 0x07, 0x00}, // DIGIT_SIX
  {0x00, 0x07, 0x05, 0x01, 0x01, 0x01, 0x01, 0x00}, // DIGIT_SEVEN
  {0x00, 0x07, 0x05, 0x07, 0x05, 0x05, 0x07, 0x00}, // DIGIT_EIGHT
  {0x00, 0x07, 0x05, 0x07, 0x01, 0x01, 0x07, 0x00}  // DIGIT_NINE
};


/// Turn-on animation:
const uint8_t ANIM_TURN_ON_LEN = 8;   // How many frames there are in the "turn-on" animation.
const uint16_t ANIM_TURN_ON[ANIM_TURN_ON_LEN][ROWS_CNT] PROGMEM = {
  {0x0000, 0x0000, 0x0000, 0x0180, 0x0180, 0x0000, 0x0000, 0x0000}, // The first frame of the animation.
  {0x0000, 0x0000, 0x03C0, 0x0240, 0x0240, 0x03C0, 0x0000, 0x0000}, // The second frame...
  {0x0000, 0x07E0, 0x0420, 0x0420, 0x0420, 0x0420, 0x07E0, 0x0000},
  {0x0FF0, 0x0810, 0x0810, 0x0810, 0x0810, 0x0810, 0x0810, 0x0FF0},
  {0x1008, 0x1008, 0x1008, 0x1008, 0x1008, 0x1008, 0x1008, 0x1008},
  {0x2004, 0x2004, 0x2004, 0x2004, 0x2004, 0x2004, 0x2004, 0x2004},
  {0x4002, 0x4002, 0x4002, 0x4002, 0x4002, 0x4002, 0x4002, 0x4002},
  {0x8001, 0x8001, 0x8001, 0x8001, 0x8001, 0x8001, 0x8001, 0x8001}, // The last frame of the animation.
};


/// Main menu:
const uint8_t ANIM_GAME_LEN = 10;
const uint8_t ANIM_GAME[NUM_OF_GAMES][ANIM_GAME_LEN][ROWS_CNT] PROGMEM = {
  // PONG ANIMATION:
  {
    {0xA0, 0x80, 0x81, 0x01, 0x01, 0x00, 0x00, 0x00},
    {0x80, 0xC0, 0x81, 0x01, 0x01, 0x00, 0x00, 0x00},
    {0x80, 0x80, 0xA1, 0x01, 0x01, 0x00, 0x00, 0x00},
    {0x80, 0x80, 0x81, 0x11, 0x01, 0x00, 0x00, 0x00},
    {0x80, 0x80, 0x80, 0x01, 0x09, 0x01, 0x00, 0x00},
    {0x80, 0x80, 0x80, 0x00, 0x01, 0x05, 0x01, 0x00},
    {0x80, 0x80, 0x80, 0x00, 0x00, 0x01, 0x03, 0x01},
    {0x80, 0x80, 0x80, 0x00, 0x00, 0x01, 0x01, 0x05},
    {0x80, 0x80, 0x80, 0x00, 0x00, 0x01, 0x09, 0x01},
    {0x80, 0x80, 0x80, 0x00, 0x00, 0x11, 0x01, 0x01},
  },
  // SNAKE ANIMATION:
  {
    {0x00, 0x00, 0x00, 0x02, 0x00, 0x38, 0x20, 0x20},
    {0x00, 0x00, 0x00, 0x02, 0x00, 0x3C, 0x20, 0x00},
    {0x00, 0x00, 0x00, 0x02, 0x00, 0x3E, 0x00, 0x00},
    {0x00, 0x00, 0x00, 0x02, 0x02, 0x1E, 0x00, 0x00},
    {0x00, 0x00, 0x10, 0x02, 0x02, 0x1E, 0x00, 0x00},
    {0x00, 0x00, 0x12, 0x02, 0x02, 0x0E, 0x00, 0x00},
    {0x00, 0x00, 0x16, 0x02, 0x02, 0x06, 0x00, 0x00},
    {0x00, 0x00, 0x1E, 0x02, 0x02, 0x02, 0x00, 0x00},
    {0x00, 0x00, 0x1E, 0x02, 0x02, 0x42, 0x00, 0x00},
    {0x00, 0x00, 0x1E, 0x12, 0x02, 0x40, 0x00, 0x00},
  },
  // FLAPPY BIRD ANIMATION:
  {
    {0x08, 0x00, 0x00, 0x28, 0x08, 0x08, 0x08, 0x08},
    {0x10, 0x00, 0x20, 0x10, 0x10, 0x10, 0x10, 0x10},
    {0x20, 0x20, 0x00, 0x20, 0x20, 0x20, 0x20, 0x20},
    {0x41, 0x01, 0x21, 0x41, 0x40, 0x40, 0x41, 0x41},
    {0x82, 0x02, 0x02, 0xa2, 0x80, 0x80, 0x82, 0x82},
    {0x04, 0x04, 0x04, 0x04, 0x20, 0x00, 0x04, 0x04},
    {0x08, 0x08, 0x08, 0x08, 0x00, 0x20, 0x08, 0x08},
    {0x10, 0x10, 0x10, 0x10, 0x00, 0x00, 0x30, 0x10},
    {0x20, 0x20, 0x20, 0x20, 0x00, 0x20, 0x20, 0x20},
    {0x41, 0x41, 0x41, 0x40, 0x20, 0x01, 0x41, 0x41},
  },
};

const uint8_t DRW_MENU_ARROW_UP[ROWS_CNT] PROGMEM   = {0x10, 0x38, 0x7C, 0x00, 0x00, 0x00, 0x00, 0x00};
const uint8_t DRW_MENU_ARROW_DOWN[ROWS_CNT] PROGMEM = {0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0x38, 0x10};


/// Menu for player selection:
const uint8_t DRW_BOLD_DIGIT[2][ROWS_CNT] PROGMEM = {
	{0x18, 0x38, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18},	// BOLD DIGIT 1
	{0x3e, 0x3e, 0x06, 0x1e, 0x3c, 0x30, 0x3e, 0x3e},	// BOLD DIGIT 2
};
const uint8_t DRW_HUMAN[ROWS_CNT] PROGMEM = {0x18, 0x18, 0x00, 0x7e, 0x18, 0x18, 0x3c, 0x66};


/// Snake:
const uint8_t DRW_CROWN[ROWS_CNT] PROGMEM = {0x00, 0x04, 0x15, 0x15, 0x1F, 0x1F, 0x1F, 0x00};
const uint8_t DRW_APPLE[ROWS_CNT] PROGMEM = {0x02, 0x04, 0x1F, 0x1F, 0x1F, 0x1F, 0x0E, 0x00};


/// Pong:
const uint16_t DRW_PONG_RESULT[2][ROWS_CNT] PROGMEM = {
	{0x0180, 0x1180, 0x55A2, 0x5580, 0x7D9C, 0x7DA2, 0x7D80, 0x0180},	// VICTORY PLAYER 1 (crown + sad-face)
	{0x0180, 0x0188, 0x45AA, 0x01AA, 0x39BE, 0x45BE, 0x01BE, 0x0180}	// VICTORY PLAYER 2 (sad-face + corwn)
};


/// Flappy Bird:
const uint8_t DRW_PIPES[ROWS_CNT] PROGMEM = {0x3C, 0x3C, 0x7E, 0x00, 0x00, 0x7E, 0x3C, 0x3C};


#endif